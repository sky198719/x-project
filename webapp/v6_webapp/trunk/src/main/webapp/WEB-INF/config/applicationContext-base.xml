<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">


    <context:property-placeholder location="classpath:zookeeper.properties" ignore-unresolvable="true"/>
    <context:property-placeholder location="classpath:validateConfig.properties" ignore-unresolvable="true"/>

    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
    <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>
    <!-- redis工厂 -->
    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.ip}"/>
        <property name="port" value="${redis.port}"/>
        <property name="poolConfig" ref="redisPoolConfig"/>
    </bean>

    <bean id="redisTemplateSession" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>
    <bean id="redisTemplateRetryTimes" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>


    <context:property-placeholder location="classpath:hosts.properties" ignore-unresolvable="true"/>
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="redisShiroSessionDAO"/>
        <property name="sessionValidationSchedulerEnabled" value="false"/>
        <property name="sessionIdCookie" ref="shiroSession"/>
    </bean>

    <bean id="shiroSession" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="XXD_${ContextPath}_SESSIONID"/>
        <property name="domain" value="${cookie.domain}"/>
        <property name="path" value="${cookie.path}"/>
    </bean>

    <!--由redis做session存储容器-->
    <bean id="redisShiroSessionDAO" class="com.xxdai.session.shiro.RedisShiroSessionDAO">
        <!--使用内存缓存登录用户信息，一次获取用户登录信息后缓存到内存减少Shiro大量的读取操作，用户退出或超时后自动清除-->
        <constructor-arg name="useMemCache" value="false"/>
        <property name="sessionTimeout" value="900"/>
        <property name="redisTemplate" ref="redisTemplateSession"/>
        <property name="shiroSessionPrefix" value="${ContextPath}Sessions"/>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
    </bean>


    <!-- 线程池 -->
    <bean id="threadPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="5"/>
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="30000"/>
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="10"/>
    </bean>

    <bean name="apiUtil" class="com.xxdai.http.ApiUtil"/>
    <!-- 微信公众账号 -->
    <!--
    <context:property-placeholder location="classpath:wxMpConfig.properties" ignore-unresolvable="true"/>
    <bean id="wxMpConfigStorage" class="me.chanjar.weixin.mp.api.WxMpInMemoryConfigStorage">
        <property name="appId" value="${wxmp.appId}"/>
        <property name="secret" value="${wxmp.secret}"/>
        <property name="token" value="${wxmp.token}"/>
        <property name="aesKey" value="${wxmp.aesKey}"/>
    </bean>
    <bean id="wxMpService" class="me.chanjar.weixin.mp.api.WxMpServiceImpl">
        <property name="wxMpConfigStorage" ref="wxMpConfigStorage"/>
    </bean>    -->
</beans>
